"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var http_1 = require("@angular/common/http");
var MainService = /** @class */ (function () {
    function MainService(http) {
        this.http = http;
        this.urlBase = "https://ws-situr.asinco.cl/api/";
    }
    MainService.prototype.rescataGuias = function (fecha, id) {
        this.controlador = 'OpeGuias/obtenerGuia?fecha=' + fecha + '&idSegUsuario=' + id;
        return this.http.get(this.urlBase + this.controlador);
    };
    MainService.prototype.rescataServicios = function (idOpeGuia, fecha, id) {
        this.controlador = 'OpeServicios/obtenerServicio?idOpeGuia=' + idOpeGuia + '&fecha=' + fecha + '&idSegUsuario=' + id;
        return this.http.get(this.urlBase + this.controlador);
    };
    MainService.prototype.rescataPasajeros = function (idOpeServicio, id) {
        this.controlador = 'OpeServicioDetalles/obtenerPasajero?idOpeServicio=' + idOpeServicio + '&idSegUsuario=' + id;
        //console.log("url",this.urlBase+this.controlador)
        return this.http.get(this.urlBase + this.controlador);
    };
    MainService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [http_1.HttpClient])
    ], MainService);
    return MainService;
}());
exports.MainService = MainService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBRTNDLDZDQUErRDtBQU0vRDtJQUlJLHFCQUFvQixJQUFlO1FBQWYsU0FBSSxHQUFKLElBQUksQ0FBVztRQUh0QyxZQUFPLEdBQVEsaUNBQWlDLENBQUE7SUFHUixDQUFDO0lBRy9CLGtDQUFZLEdBQW5CLFVBQW9CLEtBQUssRUFBRSxFQUFFO1FBQzVCLElBQUksQ0FBQyxXQUFXLEdBQUcsNkJBQTZCLEdBQUcsS0FBSyxHQUFHLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztRQUM5RSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBO0lBQ3ZELENBQUM7SUFFTSxzQ0FBZ0IsR0FBdkIsVUFBd0IsU0FBUyxFQUFFLEtBQUssRUFBRSxFQUFFO1FBQ3hDLElBQUksQ0FBQyxXQUFXLEdBQUcseUNBQXlDLEdBQUcsU0FBUyxHQUFHLFNBQVMsR0FBRyxLQUFLLEdBQUcsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQ3JILE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7SUFFdkQsQ0FBQztJQUVNLHNDQUFnQixHQUF2QixVQUF3QixhQUFhLEVBQUUsRUFBRTtRQUNyQyxJQUFJLENBQUMsV0FBVyxHQUFHLG9EQUFvRCxHQUFHLGFBQWEsR0FBRyxnQkFBZ0IsR0FBRyxFQUFFLENBQUM7UUFDaEgsa0RBQWtEO1FBQ2xELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7SUFDdkQsQ0FBQztJQXRCUSxXQUFXO1FBSnZCLGlCQUFVLEVBQUU7eUNBUWdCLGlCQUFVO09BSjFCLFdBQVcsQ0F5RHZCO0lBQUQsa0JBQUM7Q0FBQSxBQXpERCxJQXlEQztBQXpEWSxrQ0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBVc2VyIH0gZnJvbSBcIi4uL21vZGVscy91c2VyLm1vZGVsXCI7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQsIEh0dHBIZWFkZXJzIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9odHRwXCI7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcblxyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBNYWluU2VydmljZSB7XHJcblx0dXJsQmFzZTpzdHJpbmc9XCJodHRwczovL3dzLXNpdHVyLmFzaW5jby5jbC9hcGkvXCJcclxuICAgIC8vdXJsQmFzZTpzdHJpbmc9J2h0dHA6Ly9sb2NhbGhvc3Q6Mzg4MzEvYXBpLydcclxuXHRjb250cm9sYWRvcjpzdHJpbmc7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6SHR0cENsaWVudCl7fVxyXG5cclxuXHJcbiAgICBwdWJsaWMgcmVzY2F0YUd1aWFzKGZlY2hhLCBpZCkge1xyXG5cdCAgICB0aGlzLmNvbnRyb2xhZG9yID0gJ09wZUd1aWFzL29idGVuZXJHdWlhP2ZlY2hhPScgKyBmZWNoYSArICcmaWRTZWdVc3VhcmlvPScgKyBpZDtcclxuICAgICAgICByZXR1cm4gdGhpcy5odHRwLmdldCh0aGlzLnVybEJhc2UrdGhpcy5jb250cm9sYWRvcilcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVzY2F0YVNlcnZpY2lvcyhpZE9wZUd1aWEsIGZlY2hhLCBpZCl7XHJcbiAgICAgICAgdGhpcy5jb250cm9sYWRvciA9ICdPcGVTZXJ2aWNpb3Mvb2J0ZW5lclNlcnZpY2lvP2lkT3BlR3VpYT0nICsgaWRPcGVHdWlhICsgJyZmZWNoYT0nICsgZmVjaGEgKyAnJmlkU2VnVXN1YXJpbz0nICsgaWQ7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy51cmxCYXNlK3RoaXMuY29udHJvbGFkb3IpXHJcbiAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlc2NhdGFQYXNhamVyb3MoaWRPcGVTZXJ2aWNpbywgaWQpe1xyXG4gICAgICAgIHRoaXMuY29udHJvbGFkb3IgPSAnT3BlU2VydmljaW9EZXRhbGxlcy9vYnRlbmVyUGFzYWplcm8/aWRPcGVTZXJ2aWNpbz0nICsgaWRPcGVTZXJ2aWNpbyArICcmaWRTZWdVc3VhcmlvPScgKyBpZDtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKFwidXJsXCIsdGhpcy51cmxCYXNlK3RoaXMuY29udHJvbGFkb3IpXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy51cmxCYXNlK3RoaXMuY29udHJvbGFkb3IpXHJcbiAgICB9XHJcblxyXG4gICAgLy9TcF9XZWJFbmN1ZXN0YV9HcmFiYVN0YXR1c19SZWNvZ2lkYShfaWRPcGVTZXJ2aWNpb0RldGFsbGUsIF9lc1JlY29naWRhLCBfZmVjaGFIb3JhUmVjb2dpZGEsIF9yZWNvZ2lkYU9icywgaWQpIHtcclxuICAgIC8vICAgIGxldCBpZFNlZ1VzdWFyaW86IG51bWJlciA9IGlkO1xyXG4vL1xyXG4gICAgLy8gICAgLy90aGlzLnJ1dGEgPSAnaHR0cDovL2xvY2FsaG9zdDozODgzMS9hcGkvT3BlU2VydmljaW9EZXRhbGxlcy9ncmFiYXJFc3RhdHVzP2lkT3BlU2VydmljaW9EZXRhbGxlPScgKyBfaWRPcGVTZXJ2aWNpb0RldGFsbGUgKyAnJmVzUmVjb2dpZGE9JyArIF9lc1JlY29naWRhICsgJyZmZWNoYUhvcmFSZWNvZ2lkYT0nICsgX2ZlY2hhSG9yYVJlY29naWRhICsgJyZyZWNvZ2lkYU9icz0nICsgX3JlY29naWRhT2JzICsgJyZpZD0nICsgaWRTZWdVc3VhcmlvO1xyXG4gICAgLy8gICAgdGhpcy5ydXRhID0gJ2h0dHBzOi8vd3Mtc2l0dXIuYXNpbmNvLmNsL2FwaS9PcGVTZXJ2aWNpb0RldGFsbGVzL2dyYWJhckVzdGF0dXM/aWRPcGVTZXJ2aWNpb0RldGFsbGU9JyArIF9pZE9wZVNlcnZpY2lvRGV0YWxsZSArICcmZXNSZWNvZ2lkYT0nICsgX2VzUmVjb2dpZGEgKyAnJmZlY2hhSG9yYVJlY29naWRhPScgKyBfZmVjaGFIb3JhUmVjb2dpZGEgKyAnJnJlY29naWRhT2JzPScgKyBfcmVjb2dpZGFPYnMgKyAnJmlkPScgKyBpZFNlZ1VzdWFyaW87XHJcbiAgICAvLyAgIFxyXG4gICAgLy8gICAgbGV0IG1vZGVsID0ge1xyXG4gICAgLy8gICAgICAgIGlkT3BlU2VydmljaW9EZXRhbGxlOiBfaWRPcGVTZXJ2aWNpb0RldGFsbGUsXHJcbiAgICAvLyAgICAgICAgZXNSZWNvZ2lkYTogX2VzUmVjb2dpZGEsXHJcbiAgICAvLyAgICAgICAgZmVjaGFIb3JhUmVjb2dpZGE6IF9mZWNoYUhvcmFSZWNvZ2lkYSxcclxuICAgIC8vICAgICAgICByZWNvZ2lkYU9iczogX3JlY29naWRhT2JzXHJcbiAgICAvLyAgICB9O1xyXG4gICAgLy8gICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0KHRoaXMucnV0YSwgbW9kZWwpXHJcbiAgICAvLyAgICAgICAgLnN1YnNjcmliZShyZXMgPT4gcmVzLmpzb24oKSk7XHJcbiAgICAvL31cclxuLy9cclxuICAgIC8vU3BfV2ViRW5jdWVzdGFfTG9nZW8odXNlciwgcGFzcyk6IFByb21pc2U8U2VnVXN1YXJpb1tdPiB7XHJcbi8vXHJcbiAgICAvLyAgICAvL3RoaXMucnV0YSA9ICdodHRwOi8vbG9jYWxob3N0OjM4ODMxL2FwaS9TZWdVc3Vhcmlvcy9vYnRlbmVyVXN1YXJpbz91c2VyPScgKyB1c2VyICsgJyZwYXNzPScgKyBwYXNzO1xyXG4gICAgLy8gICAgdGhpcy5ydXRhID0gJ2h0dHBzOi8vd3Mtc2l0dXIuYXNpbmNvLmNsL2FwaS9TZWdVc3Vhcmlvcy9vYnRlbmVyVXN1YXJpbz91c2VyPScgKyB1c2VyICsgJyZwYXNzPScgKyBwYXNzO1xyXG4vL1xyXG4vL1xyXG4gICAgLy8gICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodGhpcy5ydXRhKVxyXG4gICAgLy8gICAgICAgIC50b1Byb21pc2UoKVxyXG4gICAgLy8gICAgICAgIC50aGVuKFxyXG4gICAgLy8gICAgICAgIChyZXNwb25zZSkgPT4ge1xyXG4gICAgLy8gICAgICAgICAgICBsZXQgcmVzcHVlc3RhOiBhbnkgPSByZXNwb25zZTtcclxuICAgIC8vICAgICAgICAgICAgbGV0IHVzdWFyaW86IFNlZ1VzdWFyaW9bXSA9IEpTT04ucGFyc2UocmVzcHVlc3RhLl9ib2R5KTtcclxuICAgIC8vICAgICAgICAgICAgcmV0dXJuIHVzdWFyaW87XHJcbiAgICAvLyAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICkuY2F0Y2goKVxyXG4gICAgLy99XHJcblxyXG59Il19